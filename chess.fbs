namespace Chess;

// Remove temporarily - rust flatbuffers v0.9 breaks enums
//enum GameResult : uint8 {
//  White = 0,
//  Black = 1,
//  Draw = 2,
//  Star = 255
//}

// Remove temporarily - rust flatbuffers v0.9 breaks enums
//enum Termination : uint8 {
//  Normal = 0,
//  TimeForfeit = 1,
//  Abandoned = 2,
//  RulesInfraction = 3,
//  Unterminated = 4,
//}

table Game {
  year:uint16;
  month:uint8;
  day:uint8;

  site:string;
  white:string;
  black:string;

  white_rating:uint16;
  black_rating:uint16;

  time_control_main:uint16;
  time_control_increment:uint8;

  eco_category:byte;
  eco_subcategory:uint8;

  moves:[uint16];

  // Bits 0-2: Piece Moved
  // Bit    3: capture
  // Bit    4: check
  // Bit    5: mate
  // Bits 6-8: nag
  // Bits 9-11: promotion
  move_metadata:[uint16];

  clock_hours:[uint8];
  clock_minutes:[uint8];
  clock_seconds:[uint8];

  eval_available:bool;
  eval_mate_in:[int16];
  eval_advantage:[float32];

  //result:Chess.GameResult;
  //termination:Chess.Termination;
  result:uint8;
  termination:uint8;
  white_diff:int16;
  black_diff:int16;
}

table GameList {
  games:[Game];
}

root_type GameList;